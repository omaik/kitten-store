name: Main
on:
  push:
    branches:
      - master
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-2

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.2

    - name: Terraform Format
      id: fmt
      working-directory: ./ops/infrastructure/live
      run: terraform fmt -check

    - name: Terraform Init
      working-directory: ./ops/infrastructure/live
      id: init
      run: terraform init

    - name: Terraform Validate
      working-directory: ./ops/infrastructure/live
      id: validate
      run: terraform validate -no-color
    - name: Terraform Apply
      working-directory: ./ops/infrastructure/live
      run: terraform apply -auto-approve
    - name: Print Out Artifacts
      working-directory: ./ops/infrastructure/live
      run: |
        mkdir artifacts
        terraform-bin output -raw  database_url > artifacts/database_url.txt
        terraform-bin output -raw eks_cluster_name  > artifacts/eks_cluster_name.txt

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: infrastructure
        path: ops/infrastructure/live/artifacts
        retention-days: 10

  build:
    needs: terraform_apply
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: ops/scripts/build.sh
      env:
        TAG: ${{ github.sha }}
    - name: Login to Docker
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Push latest image
      run: ops/scripts/publish.sh
      env:
        TAG: ${{ github.sha }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: artifacts
        retention-days: 10

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
    - name: Store ENV
      run: |
        echo "docker_image=$(cat build/docker_image.txt)" >> $GITHUB_ENV
        echo "cluster_name=$(cat infrastructure/eks_cluster_name.txt)" >> $GITHUB_ENV
        echo "database_url=$(cat infrastructure/database_url.txt)" >> $GITHUB_ENV

    - name: Configure AWS client
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name:  Login to cluster
      run: >
        aws eks update-kubeconfig
        --region ${AWS_REGION}
        --name ${{ env.cluster_name }}

    - name:  Test cluster access
      run: kubectl get nodes
