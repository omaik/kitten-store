name: Terraform
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  apply:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.2

    - name: Terraform Format
      id: fmt
      working-directory: ./ops/infrastructure/live
      run: terraform fmt -check

    - name: Terraform Init
      working-directory: ./ops/infrastructure/live
      id: init
      run: terraform init

    - name: Terraform Validate
      working-directory: ./ops/infrastructure/live
      id: validate
      run: terraform validate -no-color
    - name: Terraform Apply
      run: terraform apply -auto-approve


  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.2

    - name: Terraform Format
      id: fmt
      working-directory: ./ops/infrastructure/live
      run: terraform fmt -check

    - name: Terraform Init
      working-directory: ./ops/infrastructure/live
      id: init
      run: terraform init

    - name: Terraform Validate
      working-directory: ./ops/infrastructure/live
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      working-directory: ./ops/infrastructure/live
      run: terraform plan -no-color
      continue-on-error: true
    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
